Installing VueJS
Installing Rust

Generate files from proto (rus and C)
rust --> delete folder and run cargo run -> trigger the build process
protoc --c_out=. analysis.proto

https://github.com/protobuf-c/protobuf-c
TODO:
Note that as of version of 1.0.0, the header files generated by the protoc-c compiler contain version guards to prevent incompatibilities due to version skew between the .pb-c.h files generated by protoc-c and the public protobuf-c.h include file supplied by the libprotobuf-c support library. While we will try not to make changes to protobuf-c that will require triggering the version guard often, such as releasing a new major version of protobuf-c, this cannot be guaranteed. Thus, it's a good idea to recompile your .pb-c.c and .pb-c.h files from their source .proto files with protoc-c as part of your build system, with proper source file dependency tracking, rather than shipping potentially stale .pb-c.c and .pb-c.h files that may not be compatible with the libprotobuf-c headers installed on the system in project artifacts like repositories and release tarballs. (Note that the output of the protoc-c code generator is not standalone, as the output of some other tools that generate C code is, such as flex and bison.)



docker build -t rust_backend_image .
docker run -i -t rust_backend_image /bin/bash

docker run -d --restart=always --name=rust_backend --network=host -p 80:80 rust_backend_image
docker exec -it rust_backend /bin/bash
sudo docker logs 8fcd14b4214d


apt install pkg-config
apt install libtool-bin
sudo apt-get install autotools-dev
sudo apt-get install autoconf
autogen.sh
./configure && make && make install


Error un Ubuntu 18.04
./configure --disable-protoc

docker run -d --name=rust_backend rust_backend_image

